;; highlighter.el
;; Copyright (C) 2019, Semyon Novikov
;;
;; Version: 0.1
;; Package-Requires: ((emacs "24"))
;;
;; This file is not part of Emacs.

(deftheme highlighter
  "A light colour scheme for people who feels adventurous. Inspired by beautiful Alabaster colour scheme by Nikita Prokopov.")

(let ((bg (if (window-system) "#FFFFFF" "clear"))
      (lazy "#D1D1C0")
      (fg "black")
      (yellow "#EAEA9E")
      (red "#AA0000")
      (blue "#EAFFFF")
      (purple "#fee9e9")
      (green "#508050")
      (red-bg "#ffebeb")
      (yellow-bg "#fffcd9")
      (red-bg "#ffebeb")
      (blue-bg "#f0f9ff")
      (purple-bg "#fee9e9")
      (green-bg "#f9fcf2")
      (magenta-bg "#fdf7ff")
      (mud "#99994C"))
  (custom-theme-set-faces
   'highlighter
   `(default ((t (:background ,bg :foreground ,fg ))))
   '(cursor ((t (:background "black"))))
   '(escape-glyph ((t (:foreground "black"))))
   '(minibuffer-prompt ((t (:foreground "black" :weight bold))))
   '(highlight ((t (:foreground "grey30"))))
   `(region ((t (:background ,yellow-bg :foreground "black"))))
   `(secondary-selection ((t (:background ,red))))
   '(trailing-whitespace ((t (:background "grey"))))
   `(font-lock-builtin-face ((t (:background ,magenta-bg))))
   '(font-lock-comment-delimiter-face ((default (:inherit (font-lock-comment-face)))))
   `(font-lock-comment-face ((t (:background ,yellow-bg))))
   `(font-lock-constant-face ((t (:foreground ,fg))))
   `(font-lock-doc-face ((t (:background ,green-bg))))
   `(font-lock-function-name-face ((t (:background ,blue-bg))))
   '(font-lock-keyword-face ((t (:foreground "black"))))
   '(font-lock-negation-char-face ((t (:foreground "black"))))
   '(font-lock-preprocessor-face ((t (:foreground "black"))))
   `(font-lock-string-face ((t (:background ,green-bg))))
   '(font-lock-type-face ((t (:foreground "black"))))
   '(font-lock-variable-name-face ((t (:foreground "black"))))
   `(sh-quoted-exec ((t (:foreground "black"))))
	 `(sh-heredoc ((t (:foreground "dark green"))))
   '(font-lock-warning-face ((t (:foreground "black"))))
   '(button ((t (:inherit (link)))))
   '(link ((t (:underline (:color foreground-color :style line) :foreground "black"))))
   '(link-visited ((default (:inherit (link))) (((class color) (background light)) (:foreground "magenta4")) (((class color) (background dark)) (:foreground "violet"))))
   `(fringe ((t (:background ,bg :foreground "black"))))
   '(header-line ((default (:inherit (mode-line))) (((type tty)) (:underline (:color foreground-color :style line) :inverse-video nil)) (((class color grayscale) (background light)) (:box nil :foreground "grey20" :background "grey90")) (((class color grayscale) (background dark)) (:box nil :foreground "grey90" :background "grey20")) (((class mono) (background light)) (:underline (:color foreground-color :style line) :box nil :inverse-video nil :foreground "black" :background "white")) (((class mono) (background dark)) (:underline (:color foreground-color :style line) :box nil :inverse-video nil :foreground "white" :background "black"))))
   '(tooltip ((((class color)) (:inherit (variable-pitch) :foreground "black" :background "lightyellow")) (t (:inherit (variable-pitch)))))
   `(mode-line ((t (:background ,blue :foreground "black" :box 2))))
   '(mode-line-buffer-id ((t (:foreground "black" :weight bold))))
   '(mode-line-emphasis ((t (:foreground "black"))))
   '(mode-line-highlight ((t (:weight bold :box nil :foreground "black"))))
   `(mode-line-inactive ((t (:background ,blue :foreground "#393939" :weight normal :box t))))
   `(isearch ((t (:background ,yellow))))
   `(isearch-fail ((t (:background ,red))))
   `(lazy-highlight ((t (:foreground "black" :weight bold :background ,blue))))
   `(match ((t (:background ,yellow))))
   '(next-error ((t (:inherit (region)))))
   '(query-replace ((t (:inherit (isearch)))))

   `(show-paren-match ((t (:weight bold :background ,purple))))
   `(show-paren-mismatch ((t (:background ,red))))
   `(sp-show-pair-match-face ((t (:weight bold :background ,purple))))
   `(sp-show-pair-mismatch-face ((t (:background ,red))))

   '(term-color-red ((t (:foreground "dark red"))))
   '(term-color-green ((t (:foreground "dark green"))))
   '(term-color-yellow ((t (:foreground "#727238"))))
   '(term-color-white ((t (:foreground "#727238"))))
   '(term-color-cyan ((t (:foreground "dark blue"))))
   '(term-underline ((t (:foreground "dark red" :underline t))))))

(provide-theme 'highlighter)
(provide 'highlighter)
